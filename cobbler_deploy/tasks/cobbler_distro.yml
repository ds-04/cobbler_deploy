---

# D Simpson 2021,2023 ds-04

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

- block:

   # ensure update of distro_signatures before we do anything
   - name: cobbler signature update
     ansible.builtin.command: cobbler signature update

   - name: update rhel7 signature to have /var/lib/cobbler/kickstarts/sample.ks
     ansible.builtin.shell: cat /var/lib/cobbler/distro_signatures.json | jq '.breeds.redhat.rhel7.default_autoinstall = ["/var/lib/cobbler/kickstarts/sample.ks"]' > /tmp/ansible_jq_cobbler && mv -f /tmp/ansible_jq_cobbler /var/lib/cobbler/distro_signatures.json

   - name: update rhel8 signature to have /var/lib/cobbler/kickstarts/sample.ks
     ansible.builtin.shell: cat /var/lib/cobbler/distro_signatures.json | jq '.breeds.redhat.rhel8.default_autoinstall = ["/var/lib/cobbler/kickstarts/sample.ks"]' > /tmp/ansible_jq_cobbler && mv -f /tmp/ansible_jq_cobbler /var/lib/cobbler/distro_signatures.json

   - name: update debian squeeze signature to be bookworm instead
     ansible.builtin.shell: sed -i 's/squeeze/bookworm/g' /var/lib/cobbler/distro_signatures.json
     when: debian_direct_replace_signature_squeeze_bookworm | bool

  # TEMPORARY should be invoked as needed from above
   - name: Restart_cobblerd
     ansible.builtin.systemd:
      name: cobblerd
      state: restarted

   # ignore errors, unmount will be the next step if "{{ ISO_mount_location }}" dir is in-use as mount
   - name: Create "{{ ISO_storage_location }}" for storing ISOs and "{{ ISO_mount_location }}" for mounting
     ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
      owner: root
      group: root
     ignore_errors: true
     with_items:
      - "{{ ISO_storage_location }}"
      - "{{ ISO_mount_location }}"

   # Ensure "{{ ISO_mount_location }}" is free
   - name: Ensure nothing is mounted at "{{ ISO_mount_location }}"
     ansible.builtin.mount:
      state: unmounted
      path: "{{ ISO_mount_location }}"

   - name: (if needed) Download ISOs (preserving filename to dest)
     ansible.builtin.get_url:
      url: "{{ item.iso_url }}"
      dest: "{{ ISO_storage_location }}/{{ item.iso_url | basename }}"
      mode: '0440'
      owner: root
      group: root
      checksum: "{{ item.checksum }}"
     when:
      - add_download_distro | bool
     with_items:
      - "{{ cobbler_download_distros }}"

   - name: Check each Downloaded distro exists in cobbler
     ansible.builtin.shell: cobbler distro report --name={{ item.name }}
     ignore_errors: true
     changed_when: "'No distro' in distro_check.stdout"
     register: distro_check
     when:
      - add_download_distro | bool
     with_items:
      - "{{ cobbler_download_distros }}"

   # DOWNLOADED

   # 1. mount 2. import 3. unmount   (N.B. ISO file names were preserved, grab name from URL)
   - name: Import any cobbler_download_distros that were not identified present
     ansible.builtin.shell: /usr/bin/mount {{ ISO_storage_location }}/{{ item.item.iso_url | basename }} {{ ISO_mount_location }} && /usr/bin/cobbler import --arch={{ item.item.arch | default('x86_64') }} --path={{ ISO_mount_location }} --name={{ item.item.name }} && /usr/bin/umount {{ ISO_mount_location }}
     when:
      - item.changed
      - add_download_distro | bool
     with_items:
      - "{{ distro_check.results }}"

   # LOCALLY PROVIDED

   # TODO do sha256 check on local ISOs first

   - name: import each of the cobbler_local_distros - default add_local_distro is False
     ansible.builtin.shell: /usr/bin/mount {{ ISO_storage_location }}/{{ item.iso_name }} {{ ISO_mount_location }} && /usr/bin/cobbler import --arch={{ item.arch | default('x86_64') }} --path={{ ISO_mount_location }} --name={{ item.name }} && /usr/bin/umount {{ ISO_mount_location }}
     with_items:
      - "{{ cobbler_local_distros }}"
     when:
      - add_local_distro != 'False'
      - (cobbler_local_distros is defined) and (cobbler_local_distros|length > 0)

   - name: Sync cobbler
     ansible.builtin.command: cobbler sync

   - name: Print cobbler distro list
     ansible.builtin.command: cobbler distro list
     register: distro_list

   - name: Show distro list
     ansible.builtin.debug:
      msg: "{{ distro_list }}"

  become: true

...
